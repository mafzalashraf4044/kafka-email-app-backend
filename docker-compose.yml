version: '3.4'

x-common-variables: &kafka-common-variables
  KAFKA_MIN_INSYNC_REPLICAS: 1
  KAFKA_DEFAULT_REPLICATION_FACTOR: 1
  KAFKA_NUM_PARTITIONS: 1

services:
  email-app:
    build:
      context: .
      dockerfile: ./Dockerfile
    environment:
      - DEV_PLATFORM=DOCKER
    volumes:
      - ./src:/app/src               # Mount your application code
      - ./node_modules:/app/node_modules # Mount node_modules for caching dependencies
      - ./.env:/app/.env              # Mount the .env file
    ports:
      - '3003:3003'
    depends_on:
      - mysql
      - kafka-broker
    networks:
      - app-tier

  mysql:
    image: mysql
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=12345678
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-tier
    ports:
      - '3306:3306'

  zookeeper:
    image: zookeeper:3.7.0
    restart: 'no'
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    volumes:
      - zookeeper_data:/data
      - zookeeper_datalog:/datalog
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181
    networks:
      - app-tier

  kafka-broker:
    image: confluentinc/cp-kafka:6.1.1
    restart: 'no'
    hostname: kafka-broker
    container_name: kafka-broker
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    volumes:
      - kafka_broker_data:/var/lib/kafka/data
    environment:
      <<: *kafka-common-variables
      KAFKA_CLUSTER_ID: email-app
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,INTER_BROKER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: CLIENT://localhost:9092,INTER_BROKER://kafka-broker:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTER_BROKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-tier

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka-broker
    ports:
      - '8080:8080'
    restart: 'no'
    environment:
      - KAFKA_CLUSTERS_0_NAME=email-app
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-broker:9093
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - app-tier

networks:
  app-tier:
    driver: bridge

volumes:
  app-node-modules:
    driver: local
  mysql_data:
    driver: local
  zookeeper_data:
    driver: local
  zookeeper_datalog:
    driver: local
  kafka_broker_data:
    driver: local